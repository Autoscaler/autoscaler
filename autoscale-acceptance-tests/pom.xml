<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2015-2024 Open Text.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.github.autoscaler</groupId>
    <artifactId>autoscale-acceptance-tests</artifactId>
    
    <parent>
        <groupId>com.github.autoscaler</groupId>
        <artifactId>autoscale-aggregator</artifactId>
        <version>2.2.0-SNAPSHOT</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>com.github.autoscaler</groupId>
            <artifactId>autoscale-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.autoscaler</groupId>
            <artifactId>autoscale-workload-rabbit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.rabbitmq</groupId>
            <artifactId>amqp-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <systemPropertyVariables>
                                <docker.host.address>${docker.host.address}</docker.host.address>
                                <autoscale.admin.port>${autoscale.admin.port}</autoscale.admin.port>
                                <rabbitmq.node.port>${rabbitmq.nodePort}</rabbitmq.node.port>
                                <rabbitmq.ctrl.port>${rabbitmq.managementPort}</rabbitmq.ctrl.port>
                                <rabbitmq.username>guest</rabbitmq.username>
                                <rabbitmq.password>guest</rabbitmq.password>
                            </systemPropertyVariables>
                            <!--<debugForkedProcess>true</debugForkedProcess>-->
                            <!--<summaryFile>target/failsafe-reports/failsafe-summary.xml</summaryFile>-->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <verbose>false</verbose>
                    <watchInterval>500</watchInterval>
                    <logDate>default</logDate>
                    <containerNamePattern>%a-%t</containerNamePattern>
                    <images>
                        
                        <image>
                            <alias>zookeeper</alias>
                            <name>${projectDockerRegistry}/library/zookeeper</name>
                            <run>
                                <ports>
                                    <port>${zookeeper.port}:2181</port>
                                </ports>
                                <wait>
                                    <tcp>
                                        <mode>mapped</mode>
                                        <ports>
                                            <port>2181</port>
                                        </ports>
                                    </tcp>
                                    <time>20000</time>
                                </wait>
                                <log>
                                    <enabled>false</enabled>
                                </log>
                            </run>
                        </image>
                        
                        <image>
                            <alias>mesos-master</alias>
                            <name>${projectDockerRegistry}/mesosphere/mesos-master</name>
                            <run>
                                <ports>
                                    <port>${mesos.port}:5050</port>
                                </ports>
                                <privileged>true</privileged>
                                <env>
                                    <MESOS_ZK>zk://zookeeper:2181/mesos</MESOS_ZK>
                                    <MESOS_LOG_DIR>/var/log/mesos</MESOS_LOG_DIR>
                                    <MESOS_WORK_DIR>/var/tmp/mesos</MESOS_WORK_DIR>
                                </env>
                                <links>
                                    <link>zookeeper</link>
                                </links>
                                <wait>
                                    <tcp>
                                        <mode>mapped</mode>
                                        <ports>
                                            <port>5050</port>
                                        </ports>
                                    </tcp>
                                    <time>30000</time>
                                </wait>
                                <log>
                                    <enabled>false</enabled>
                                </log>
                            </run>
                        </image>
                        
                        <image>
                            <alias>mesos-agent</alias>
                            <name>${projectDockerRegistry}/mesosphere/mesos-agent</name>
                            <run>
                                <ports>
                                    <port>${mesos.agent.port}:5051</port>
                                </ports>
                                <privileged>true</privileged>
                                <env>
                                    <MESOS_MASTER>zk://zookeeper:2181/mesos</MESOS_MASTER>
                                    <MESOS_SYSTEMD_ENABLE_SUPPORT>false</MESOS_SYSTEMD_ENABLE_SUPPORT>
                                    <MESOS_LOG_DIR>/var/log/mesos</MESOS_LOG_DIR>
                                    <MESOS_WORK_DIR>/var/tmp/mesos</MESOS_WORK_DIR>
                                </env>
                                <volumes>
                                    <bind>
                                        <volume>/var/run/docker.sock:/run/docker.sock</volume>
                                        <volume>/usr/bin/docker:/usr/bin/docker</volume>
                                        <volume>/cgroup:/cgroup</volume>
                                        <volume>/sys:/sys:ro</volume>
                                    </bind>
                                </volumes>
                                <links>
                                    <link>zookeeper</link>
                                    <link>mesos-master</link>
                                </links>
                                <wait>
                                    <tcp>
                                        <mode>mapped</mode>
                                        <ports>
                                            <port>5051</port>
                                        </ports>
                                    </tcp>
                                    <time>30000</time>
                                </wait>
                                <log>
                                    <enabled>false</enabled>
                                </log>
                            </run>
                        </image>

                        <image>
                            <alias>rabbitmq</alias>
                            <name>${projectDockerRegistry}/library/rabbitmq</name>
                            <run>
                                <ports>
                                    <port>${rabbitmq.nodePort}:5672</port>
                                    <port>${rabbitmq.managementPort}:15672</port>
                                </ports>
                                <wait>
                                    <log>Server startup complete</log>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>use-default-fixed-ports</id>
            <properties>
                <mesos.port>5050</mesos.port>
                <mesos.agent.port>5051</mesos.agent.port>
                <rabbitmq.nodePort>5672</rabbitmq.nodePort>
                <rabbitmq.managementPort>15672</rabbitmq.managementPort>
                <zookeeper.port>2181</zookeeper.port>
            </properties>
        </profile>
    </profiles>
</project>
